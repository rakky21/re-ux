{"ast":null,"code":"/**\n * Encodes a string in a colour: red, yellow or green\n * @param  {String} c   colour to highlight in\n * @param  {String} str the string to encode\n * @return {String}     coloured string for terminal printing\n */\nfunction colour(c, str) {\n  return (colour[c] || colour.black) + str + colour.black;\n}\n\nfunction strip(str) {\n  re.lastIndex = 0; // reset position\n\n  return str.replace(re, '');\n}\n\ncolour.red = '\\x1B[31m';\ncolour.yellow = '\\x1B[33m';\ncolour.green = '\\x1B[32m';\ncolour.black = '\\x1B[39m';\nvar reStr = Object.keys(colour).map(key => colour[key]).join('|');\nvar re = new RegExp(('(' + reStr + ')').replace(/\\[/g, '\\\\['), 'g');\ncolour.strip = strip;\nmodule.exports = colour;","map":{"version":3,"sources":["C:/Users/rakky/codingOG/homework/node_modules/nodemon/lib/utils/colour.js"],"names":["colour","c","str","black","strip","re","lastIndex","replace","red","yellow","green","reStr","Object","keys","map","key","join","RegExp","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,GAAnB,EAAwB;AACtB,SAAO,CAACF,MAAM,CAACC,CAAD,CAAN,IAAaD,MAAM,CAACG,KAArB,IAA8BD,GAA9B,GAAoCF,MAAM,CAACG,KAAlD;AACD;;AAED,SAASC,KAAT,CAAeF,GAAf,EAAoB;AAClBG,EAAAA,EAAE,CAACC,SAAH,GAAe,CAAf,CADkB,CACA;;AAClB,SAAOJ,GAAG,CAACK,OAAJ,CAAYF,EAAZ,EAAgB,EAAhB,CAAP;AACD;;AAEDL,MAAM,CAACQ,GAAP,GAAa,UAAb;AACAR,MAAM,CAACS,MAAP,GAAgB,UAAhB;AACAT,MAAM,CAACU,KAAP,GAAe,UAAf;AACAV,MAAM,CAACG,KAAP,GAAe,UAAf;AAEA,IAAIQ,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYb,MAAZ,EAAoBc,GAApB,CAAwBC,GAAG,IAAIf,MAAM,CAACe,GAAD,CAArC,EAA4CC,IAA5C,CAAiD,GAAjD,CAAZ;AACA,IAAIX,EAAE,GAAG,IAAIY,MAAJ,CAAW,CAAC,MAAMN,KAAN,GAAc,GAAf,EAAoBJ,OAApB,CAA4B,KAA5B,EAAmC,KAAnC,CAAX,EAAsD,GAAtD,CAAT;AAEAP,MAAM,CAACI,KAAP,GAAeA,KAAf;AAEAc,MAAM,CAACC,OAAP,GAAiBnB,MAAjB","sourcesContent":["/**\n * Encodes a string in a colour: red, yellow or green\n * @param  {String} c   colour to highlight in\n * @param  {String} str the string to encode\n * @return {String}     coloured string for terminal printing\n */\nfunction colour(c, str) {\n  return (colour[c] || colour.black) + str + colour.black;\n}\n\nfunction strip(str) {\n  re.lastIndex = 0; // reset position\n  return str.replace(re, '');\n}\n\ncolour.red = '\\x1B[31m';\ncolour.yellow = '\\x1B[33m';\ncolour.green = '\\x1B[32m';\ncolour.black = '\\x1B[39m';\n\nvar reStr = Object.keys(colour).map(key => colour[key]).join('|');\nvar re = new RegExp(('(' + reStr + ')').replace(/\\[/g, '\\\\['), 'g');\n\ncolour.strip = strip;\n\nmodule.exports = colour;\n"]},"metadata":{},"sourceType":"script"}